-- MySQL Script generated by MySQL Workbench
-- Sat May  7 17:53:17 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema AmbAlert
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema AmbAlert
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `AmbAlert` DEFAULT CHARACTER SET utf8 ;
USE `AmbAlert` ;

-- -----------------------------------------------------
-- Table `AmbAlert`.`AlertVehicle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AmbAlert`.`AlertVehicle` (
  `idAlertVehicle` INT NOT NULL,
  `SystemEntryDate` DATE NULL,
  `SystemExitDate` DATE NULL,
  PRIMARY KEY (`idAlertVehicle`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AmbAlert`.`Ambulance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AmbAlert`.`Ambulance` (
  `idAmb` INT NOT NULL,
  `BaseHospital` VARCHAR(45) NULL,
  `SytemEntryDate` DATE NULL,
  `SytemExitDate` DATE NULL,
  PRIMARY KEY (`idAmb`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AmbAlert`.`EmergencyCall`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AmbAlert`.`EmergencyCall` (
  `idEmergencyCall` INT NOT NULL AUTO_INCREMENT,
  `InitiatorAmb` INT NULL,
  `TimeStamp` DATETIME NULL,
  `StartLocation` POINT NULL,
  `Destination` POINT NULL,
  `LocationPulse` POINT NULL,
  `PulseNumber` INT NULL,
  PRIMARY KEY (`idEmergencyCall`),
  INDEX `idAmb_idx` (`InitiatorAmb` ASC) VISIBLE,
  CONSTRAINT `idAmb`
    FOREIGN KEY (`InitiatorAmb`)
    REFERENCES `AmbAlert`.`Ambulance` (`idAmb`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AmbAlert`.`AlertVehicleList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AmbAlert`.`AlertVehicleList` (
  `idAlertVehicleList` INT NOT NULL,
  `idAlertVehicle` INT NULL,
  `idAlertNotification` INT NULL,
  PRIMARY KEY (`idAlertVehicleList`),
  INDEX `idAlertVehicle_idx` (`idAlertVehicle` ASC) VISIBLE,
  INDEX `idAlertNotification_idx` (`idAlertNotification` ASC) VISIBLE,
  CONSTRAINT `idAlertVehicle`
    FOREIGN KEY (`idAlertVehicle`)
    REFERENCES `AmbAlert`.`AlertVehicle` (`idAlertVehicle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idAlertNotification`
    FOREIGN KEY (`idAlertNotification`)
    REFERENCES `AmbAlert`.`AlertNotification` (`idAlertNotification`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AmbAlert`.`AlertNotification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `AmbAlert`.`AlertNotification` (
  `idAlertNotification` INT NOT NULL AUTO_INCREMENT,
  `idEmergencyCall` INT NULL,
  `idAlertVehicleList` INT NULL,
  `timestamp` DATETIME NULL,
  `message` VARCHAR(200) NULL,
  PRIMARY KEY (`idAlertNotification`),
  INDEX `idEmergencyCall_idx` (`idEmergencyCall` ASC) VISIBLE,
  INDEX `idAlertVehicleList_idx` (`idAlertVehicleList` ASC) VISIBLE,
  CONSTRAINT `idEmergencyCall`
    FOREIGN KEY (`idEmergencyCall`)
    REFERENCES `AmbAlert`.`EmergencyCall` (`idEmergencyCall`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idAlertVehicleList`
    FOREIGN KEY (`idAlertVehicleList`)
    REFERENCES `AmbAlert`.`AlertVehicleList` (`idAlertVehicleList`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
